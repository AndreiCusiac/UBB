     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf, fscanf, fprintf, fopen, fclose   ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  
    10                                  import scanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  import fscanf msvcrt.dll
    14                                  import fopen msvcrt.dll
    15                                  import fclose msvcrt.dll
    16                                  
    17                                      ; exit is a function that ends the calling process. It is defined in msvcrt.dll 
    18                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    19                                  
    20                                  ; our data is declared here (the variables needed by our program)
    21                                  segment data use32 class=data
    22                                      ; ...
    23                                      
    24 00000000 256300                      car db '%c', 0
    25 00000003 256400                      form db '%d', 0
    26 00000006 7200                        rea db 'r', 0
    27 00000008 7700                        wri db 'w', 0
    28                                      
    29 0000000A 00000000                    n dd 0
    30 0000000E 00000000                    k dd 0
    31                                      
    32 00000012 496E7075742E747874-         nume1 db 'Input.txt', 0
    32 0000001B 00                 
    33 0000001C 6F75747075742D692E-         nume2 db 'output-i.txt', 0
    33 00000025 74787400           
    34                                      
    35 00000029 6162636465676800            sir db 'abcdegh', 0
    36                                      
    37 00000031 FFFFFFFF                    desc1 dd -1
    38 00000035 FFFFFFFF                    desc2 dd -1
    39                                      
    40                                  ; our code starts here
    41                                  segment code use32 class=code
    42                                      start:
    43                                          
    44 00000000 68[06000000]                    push dword rea
    45 00000005 68[12000000]                    push dword nume1
    46 0000000A FF15[00000000]                  call [fopen]
    47 00000010 83C408                          add esp, 4*2
    48                                          
    49 00000013 A3[31000000]                    mov [desc1], eax
    50                                          
    51 00000018 83F800                          cmp eax, 0
    52 0000001B 0F84B3000000                    je final
    53                                          
    54 00000021 68[0A000000]                    push dword n
    55 00000026 68[03000000]                    push dword form
    56 0000002B FF35[31000000]                  push dword [desc1]
    57 00000031 FF15[00000000]                  call [fscanf]
    58 00000037 83C40C                          add esp, 4*3
    59                                          
    60 0000003A FF35[31000000]                  push dword [desc1]
    61 00000040 FF15[00000000]                  call [fclose]
    62 00000046 83C404                          add esp, 4
    63                                          
    64 00000049 FF05[0A000000]                  inc dword [n]
    65                                          
    66                                          Repeta:
    67                                  
    68 0000004F 833D[0A000000]00                    cmp dword [n], 0
    69 00000056 747C                                je final
    70                                              
    71 00000058 8B0D[0A000000]                      mov ecx, [n]
    72 0000005E 49                                  dec ecx
    73 0000005F 83C130                              add ecx, 48
    74 00000062 880D[23000000]                      mov byte[nume2+7], cl
    75                                              
    76 00000068 68[08000000]                        push dword wri
    77 0000006D 68[1C000000]                        push dword nume2
    78 00000072 FF15[00000000]                      call [fopen]
    79 00000078 83C408                              add esp, 4*2
    80                                              
    81 0000007B A3[35000000]                        mov [desc2], eax
    82                                              
    83 00000080 83F800                              cmp eax, 0
    84 00000083 744F                                je final
    85                                              
    86 00000085 8B0D[0A000000]                      mov ecx, [n]
    87                                              
    88 0000008B BE[29000000]                        mov esi, sir
    89                                              
    90 00000090 FC                                  cld 
    91                                              
    92                                              Scriem:
    93                                              
    94 00000091 890D[0E000000]                          mov [k], ecx
    95                                              
    96 00000097 B800000000                              mov eax, 0
    97 0000009C AC                                      lodsb
    98                                                  
    99 0000009D 50                                      push dword eax
   100 0000009E 68[00000000]                            push dword car
   101 000000A3 FF35[35000000]                          push dword [desc2]
   102 000000A9 FF15[00000000]                          call [fprintf]
   103 000000AF 83C40C                                  add esp, 4*3
   104                                                  
   105 000000B2 8B0D[0E000000]                          mov ecx, [k]
   106                                                  
   107 000000B8 E2D7                                loop Scriem
   108                                              
   109 000000BA FF35[35000000]                      push dword [desc2]
   110 000000C0 FF15[00000000]                      call [fclose]
   111 000000C6 83C404                              add esp, 4
   112                                              
   113 000000C9 FF0D[0A000000]                      dec dword [n]
   114                                              
   115                                              
   116 000000CF E97BFFFFFF                      jmp Repeta
   117                                          
   118                                          final:
   119                                          
   120                                          ; exit(0)
   121 000000D4 6A00                            push dword 0      ; push the parameter for exit onto the stack
   122 000000D6 FF15[00000000]                  call [exit]       ; call exit to terminate the program
