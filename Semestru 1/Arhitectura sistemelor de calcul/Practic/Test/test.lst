     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf   ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  
    10                                  import scanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  
    13                                      ; exit is a function that ends the calling process. It is defined in msvcrt.dll 
    14                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19                                      
    20 00000000 256300                      form db '%c', 0
    21 00000003 256400                      decc db '%d', 0
    22                                      
    23 00000006 00000000                    a dd 0
    24                                      
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28                                          
    29                                          Inceput:
    30                                          
    31 00000000 68[06000000]                        push dword a
    32 00000005 68[00000000]                        push dword form
    33 0000000A FF15[00000000]                      call [scanf]
    34 00000010 83C408                              add esp, 4*2
    35                                           
    36 00000013 833D[06000000]21                    cmp dword [a], '!'
    37 0000001A 7418                                je Iesim
    38                                              
    39                                              
    40                                          Afis:
    41 0000001C FF35[06000000]                      push dword [a]
    42 00000022 68[00000000]                        push dword form
    43 00000027 FF15[00000000]                      call [printf]
    44 0000002D 83C408                              add esp, 4*2
    45                                          
    46 00000030 E2CE                            loop Inceput
    47                                          
    48                                          
    49 00000032 EBCC                            jmp Inceput
    50                                          
    51                                          Iesim:
    52 00000034 B832000000                          mov eax, 50
    53 00000039 50                                  push dword eax
    54 0000003A 68[00000000]                        push dword form
    55 0000003F FF15[00000000]                      call [printf]
    56 00000045 83C408                              add esp, 4*2
    57                                              
    58                                          ; exit(0)
    59 00000048 6A00                            push dword 0      ; push the parameter for exit onto the stack
    60 0000004A FF15[00000000]                  call [exit]       ; call exit to terminate the program
