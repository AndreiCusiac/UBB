     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf, fopen, fclose, fprintf, fscanf, fread   ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  
    10                                  import scanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import fopen msvcrt.dll
    14                                  import fscanf msvcrt.dll
    15                                  import fprintf msvcrt.dll
    16                                  import fread msvcrt.dll
    17                                  
    18                                      ; exit is a function that ends the calling process. It is defined in msvcrt.dll 
    19                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    20                                  
    21                                  ; our data is declared here (the variables needed by our program)
    22                                  segment data use32 class=data
    23                                      ; ...
    24                                      
    25                                      len equ 100
    26 00000000 6D6572652070657265-         s db 'mere pere sajasjk asasa dassdas', 0
    26 00000009 2073616A61736A6B20-
    26 00000012 617361736120646173-
    26 0000001B 7364617300         
    27                                      
    28 00000020 00<rept>                    nume1 times len db 0
    29 00000084 6F75747075742E7478-         nume2 db 'output.txt', 0
    29 0000008D 7400               
    30                                      
    31 0000008F 257300                      format_string db '%s', 0
    32 00000092 256400                      format_numar db '%d', 0
    33 00000095 256300                      format_caracter db '%c', 0
    34                                      
    35 00000098 2000                        spatiu_nou db ' ', 0
    36                                      
    37 0000009A 00000000                    n dd 0
    38 0000009E 00000000                    b dd 0
    39 000000A2 00000000                    k dd 0
    40                                      
    41 000000A6 7200000000000000            rea dd 'r', 0
    42 000000AE 7700000000000000            wri dd 'w', 0
    43                                      
    44 000000B6 FFFFFFFF                    desc1 dd -1
    45 000000BA FFFFFFFF                    desc2 dd -1
    46                                      
    47                                      
    48                                      
    49                                  ; our code starts here
    50                                  segment code use32 class=code
    51                                      start:
    52                                          
    53 00000000 68[20000000]                    push dword nume1
    54 00000005 68[8F000000]                    push dword format_string
    55 0000000A FF15[00000000]                  call [scanf]
    56 00000010 83C408                          add esp, 4*2
    57                                          
    58 00000013 68[9A000000]                    push dword n
    59 00000018 68[92000000]                    push dword format_numar
    60 0000001D FF15[00000000]                  call [scanf]
    61 00000023 83C408                          add esp, 4*2
    62                                          
    63 00000026 68[A6000000]                    push dword rea
    64 0000002B 68[20000000]                    push dword nume1
    65 00000030 FF15[00000000]                  call [fopen]
    66 00000036 83C408                          add esp, 4*2
    67                                          
    68 00000039 A3[B6000000]                    mov [desc1], eax
    69                                          
    70 0000003E 83F800                          cmp eax, 0
    71 00000041 0F84F0000000                    je final
    72                                          
    73 00000047 68[AE000000]                    push dword wri
    74 0000004C 68[84000000]                    push dword nume2
    75 00000051 FF15[00000000]                  call [fopen]
    76 00000057 83C408                          add esp, 4*2
    77                                          
    78 0000005A A3[BA000000]                    mov [desc2], eax
    79                                          
    80 0000005F 83F800                          cmp eax, 0
    81 00000062 0F84CF000000                    je final
    82                                          
    83 00000068 FF35[B6000000]                  push dword [desc1]
    84 0000006E 6A64                            push dword len
    85 00000070 6A01                            push dword 1
    86 00000072 68[00000000]                    push dword s        
    87 00000077 FF15[00000000]                  call [fread]
    88 0000007D 83C410                          add esp, 4*4
    89                                          
    90 00000080 89C1                            mov ecx, eax; salvam in ecx numarul de caractere din fisier
    91 00000082 83F900                          cmp ecx, 0
    92 00000085 7402                            je TreciLaFinal
    93 00000087 7505                            jne MaiDeparte
    94                                          
    95                                          TreciLaFinal:
    96 00000089 E9A9000000                          jmp final
    97                                          
    98                                          MaiDeparte:
    99                                          
   100 0000008E BE[00000000]                    mov esi, s
   101 00000093 BF00000000                      mov edi, 0
   102 00000098 FC                              cld 
   103                                          
   104 00000099 C705[9E000000]0000-             mov dword[b], 0
   104 000000A1 0000               
   105                                          
   106                                          Repeta:
   107                                              
   108 000000A3 890D[A2000000]                      mov dword[k], ecx
   109                                              
   110 000000A9 B800000000                          mov eax, 0
   111 000000AE AC                                  lodsb
   112                                              
   113 000000AF 83F80A                              cmp eax, 10
   114 000000B2 740E                                je Verificam
   115                                              
   116 000000B4 83F820                              cmp eax, ' '
   117 000000B7 7409                                je Verificam
   118                                              
   119                                              Incrementam:
   120 000000B9 FF05[9E000000]                          inc dword[b]
   121 000000BF AA                                      stosb 
   122                                              
   123 000000C0 EB4F                                jmp Gata
   124                                              
   125                                              Verificam:
   126 000000C2 8B0D[9A000000]                          mov ecx, dword[n]
   127 000000C8 8B1D[9E000000]                          mov ebx, dword[b]
   128                                                  
   129 000000CE 39D9                                    cmp ecx, ebx
   130 000000D0 7530                                    jne TrecemPeste
   131 000000D2 7400                                    je PunemInFisier
   132                                                  
   133                                                  PunemInFisier:
   134                                                      
   135 000000D4 57                                          push dword edi
   136 000000D5 68[8F000000]                                push dword format_string
   137 000000DA FF35[BA000000]                              push dword [desc2]
   138 000000E0 FF15[00000000]                              call [fprintf]
   139 000000E6 83C40C                                      add esp, 4*3
   140                                                      
   141 000000E9 68[98000000]                                push dword spatiu_nou
   142 000000EE 68[95000000]                                push dword format_caracter
   143 000000F3 FF35[BA000000]                              push dword [desc2]
   144 000000F9 FF15[00000000]                              call [fprintf]
   145 000000FF 83C40C                                      add esp, 4*3
   146                                                      
   147                                                  TrecemPeste:
   148                                                      
   149 00000102 BF00000000                                  mov edi, 0
   150 00000107 C705[9E000000]0000-                         mov dword[b], 0
   150 0000010F 0000               
   151                                                  
   152                                              Gata:
   153                                              
   154 00000111 8B0D[A2000000]                      mov ecx, dword[k]
   155                                              
   156 00000117 E28A                            loop Repeta
   157                                          
   158 00000119 FF35[B6000000]                  push dword [desc1]
   159 0000011F FF15[00000000]                  call [fclose]
   160 00000125 83C404                          add esp, 4
   161                                          
   162 00000128 FF35[BA000000]                  push dword [desc2]
   163 0000012E FF15[00000000]                  call [fclose]
   164 00000134 83C404                          add esp, 4
   165                                          
   166                                          final:
   167                                          
   168                                          ; exit(0)
   169 00000137 6A00                            push dword 0      ; push the parameter for exit onto the stack
   170 00000139 FF15[00000000]                  call [exit]       ; call exit to terminate the program
