     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf, fprintf, fopen, fclose   ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  
    10                                  import scanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  import fopen msvcrt.dll
    15                                  
    16                                      ; exit is a function that ends the calling process. It is defined in msvcrt.dll 
    17                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    18                                  
    19                                  ; our data is declared here (the variables needed by our program)
    20                                  segment data use32 class=data
    21                                      ; ...
    22                                      
    23 00000000 312D696D7061725F6E-         nume_fis db '1-impar_neg.txt', 0
    23 00000009 65672E74787400     
    24                                      
    25 00000010 7700                        typ db 'w', 0
    26 00000012 FFFFFFFF                    desc dd -1
    27                                      
    28 00000016 00000000                    a dd 0
    29 0000001A 00000000                    b dd 0
    30                                  
    31 0000001E 2000                        spatiu_nou db ' ', 0
    32 00000020 0A00                        linie_noua db 10, 0
    33 00000022 256400                      form db '%d', 0
    34                                      
    35                                  ; our code starts here
    36                                  segment code use32 class=code
    37                                      start:
    38                                          
    39 00000000 68[10000000]                    push dword typ
    40 00000005 68[00000000]                    push dword nume_fis
    41 0000000A FF15[00000000]                  call [fopen]
    42 00000010 83C408                          add esp, 4*2
    43                                          
    44 00000013 A3[12000000]                    mov [desc], eax
    45                                          
    46 00000018 83F800                          cmp eax, 0
    47 0000001B 0F8487000000                    je final
    48                                          
    49 00000021 B902000000                      mov ecx, 2
    50                                      
    51                                          Repeta:
    52                                          
    53 00000026 68[16000000]                        push dword a
    54 0000002B 68[22000000]                        push dword form
    55 00000030 FF15[00000000]                      call [scanf]
    56 00000036 83C408                              add esp, 4*2
    57                                              
    58 00000039 833D[16000000]00                    cmp dword [a], 0
    59 00000040 7457                                je iesim
    60 00000042 7C02                                jl Verificam
    61 00000044 7F4C                                jg continuam
    62                                              
    63                                              Verificam:
    64                                                  
    65 00000046 A1[16000000]                            mov eax, [a]
    66 0000004B BB00000000                              mov ebx, 0
    67                                                  
    68                                                  Impartim:
    69                                                      
    70 00000050 D1E8                                        shr eax, 1
    71 00000052 7202                                        jc Incrementam
    72 00000054 7301                                        jnc MaiVedem
    73                                                      
    74                                                      Incrementam:
    75 00000056 43                                              inc ebx
    76                                                      
    77                                                      MaiVedem:
    78                                                          
    79 00000057 83F800                                          cmp eax, 0
    80 0000005A 7402                                            je ScriemSauNuScriem
    81 0000005C 75F2                                            jne Impartim
    82                                              
    83                                              ScriemSauNuScriem:
    84                                                  
    85 0000005E D1EB                                    shr ebx, 1
    86 00000060 7202                                    jc Scriem
    87 00000062 732E                                    jnc continuam
    88                                                  
    89                                                  Scriem:
    90                                                      
    91 00000064 FF35[16000000]                              push dword [a]
    92 0000006A 68[22000000]                                push dword form
    93 0000006F FF35[12000000]                              push dword [desc]
    94 00000075 FF15[00000000]                              call [fprintf]
    95 0000007B 83C40C                                      add esp, 4*3
    96                                                      
    97 0000007E 68[1E000000]                                push dword spatiu_nou
    98 00000083 FF35[12000000]                              push dword [desc]
    99 00000089 FF15[00000000]                              call [fprintf]
   100 0000008F 83C408                                      add esp, 4*2
   101                                              
   102                                              continuam:
   103                                                  
   104 00000092 B902000000                              mov ecx, 2
   105                                          
   106 00000097 E28D                            loop Repeta
   107                                          
   108                                          iesim:
   109 00000099 FF35[12000000]                  push dword [desc]
   110 0000009F FF15[00000000]                  call [fclose]
   111 000000A5 83C404                          add esp, 4
   112                                          
   113                                          final:
   114                                          
   115                                          ; exit(0)
   116 000000A8 6A00                            push dword 0      ; push the parameter for exit onto the stack
   117 000000AA FF15[00000000]                  call [exit]       ; call exit to terminate the program
