     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      
    15 00000000 FD                          a db -3
    16 00000001 07                          b db 7
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; (d+d-c)-(c+c-a)+(c+a)
    22                                          
    23 00000000 A0[00000000]                    mov al, [a]
    24 00000005 8A1D[01000000]                  mov bl, [b]
    25 0000000B F6EB                            imul bl ;
    26                                          
    27                                          ; checked
    28                                          
    29                                          ;???
    30                                          ;push edx 
    31                                          ;push eax
    32                                          ;pop [rez] 
    33                                          ;???
    34                                          
    35                                          ;??? 
    36                                          ;mov [rez+0], eax
    37                                          ;mov [rez+4], edx
    38                                          ;???
    39                                          
    40                                          ; exit(0)
    41 0000000D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 0000000F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
