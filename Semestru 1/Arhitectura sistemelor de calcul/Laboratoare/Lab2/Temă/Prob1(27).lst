     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      
    15 00000000 0A                          a db 10
    16 00000001 14                          b db 20
    17 00000002 0F                          c db 15
    18 00000003 03                          d db 3
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                             ; (a+b-c)-(a+d)
    24                                             
    25                                             ; (a+b-c)
    26                                             
    27 00000000 A0[00000000]                       mov al, [a]
    28 00000005 B400                               mov ah, 0
    29 00000007 8A1D[01000000]                     mov bl, [b]
    30 0000000D B700                               mov bh, 0
    31 0000000F 6601D8                             add ax, bx
    32 00000012 8A1D[02000000]                     mov bl, [c]
    33 00000018 B700                               mov bh, 0
    34 0000001A 6629D8                             sub ax, bx
    35                                             
    36                                             ; (a+d)
    37                                             
    38 0000001D 8A1D[00000000]                     mov bl, [a]
    39 00000023 B700                               mov bh, 0
    40 00000025 8A0D[03000000]                     mov cl, [d]
    41 0000002B B500                               mov ch, 0
    42 0000002D 6601CB                             add bx, cx
    43                                             
    44                                             ; (1) - (2)
    45                                             
    46 00000030 6629D8                             sub ax, bx
    47                                          
    48                                          ; exit(0)
    49 00000033 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 00000035 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
