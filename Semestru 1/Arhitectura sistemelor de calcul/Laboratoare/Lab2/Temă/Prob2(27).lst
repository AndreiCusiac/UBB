     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      
    15 00000000 6600                        a dw 102
    16 00000002 3200                        b dw 50
    17 00000004 2201                        c dw 290
    18 00000006 0600                        d dw 6
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                             ; a+b-(c+d)+100h
    24                                             
    25                                             ; a+b
    26                                             
    27 00000000 66A1[00000000]                     mov ax, [a]
    28 00000006 668B1D[02000000]                   mov bx, [b]
    29 0000000D 6601D8                             add ax, bx
    30                                             
    31                                             ; (c+d)
    32                                             
    33 00000010 668B1D[04000000]                   mov bx, [c]
    34 00000017 668B0D[06000000]                   mov cx, [d]
    35 0000001E 6601CB                             add bx, cx
    36                                             
    37                                             ; (1) - (2) + 100h
    38                                             
    39 00000021 6629D8                             sub ax, bx
    40 00000024 66050001                           add ax, 256
    41                                          
    42                                          ; exit(0)
    43 00000028 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 0000002A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
