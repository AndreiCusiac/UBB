     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fscanf, fprintf, fopen, fclose               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import fscanf msvcrt.dll
    10                                  import fprintf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  
    14                                      ; exit is a function that ends the calling process. It is defined in msvcrt.dll 
    15                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    16                                  
    17                                  ; our data is declared here (the variables needed by our program)
    18                                  segment data use32 class=data
    19                                      ; ...
    20                                      
    21                                      
    22 00000000 3132616200                  s db '1', '2', 'a', 'b', 0
    23                                      
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          
    28                                          ; Se da un numar natural negativ a (a: dword). Sa se afiseze valoarea lui in baza 10 si in baza 16, 
    29                                          ; in urmatorul format: "a = <base_10> (baza 10), a = <base_16> (baza 16)"
    30                                          
    31 00000000 A1[00000000]                    mov eax, [s]
    32                                          
    33                                          ; exit(0)
    34 00000005 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 00000007 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
