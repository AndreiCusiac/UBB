     1                                  
     2                                  ;cod pentru sumafunctie.asm
     3                                  
     4                                  bits 32                         
     5                                  
     6                                  segment code use32 public code
     7                                  
     8                                  global sufix  ; eticheta
     9                                      
    10                                  
    11                                  sufix:
    12                                  	
    13 00000000 8B742404                	mov esi, [esp + 4] ; accesam primul sir
    14                                  	
    15 00000004 8B7C2408                    mov edi, [esp + 8] ; accesam al doiea sir
    16                                      
    17 00000008 8B44240C                    mov eax, [esp + 12] ; accesam lungimea primului sir
    18                                      
    19 0000000C 8B5C240C                    mov ebx, [esp + 12] ; accesam lungimea celui de-al doilea sir
    20                                      
    21 00000010 8B4C2410                    mov ecx, [esp + 16] ; parc1
    22                                      
    23 00000014 8B542410                    mov edx, [esp + 16] ; parc2
    24                                      
    25                                      
    26 00000018 01C6                        add esi, eax ; ne pozitionam pe ultimul element din primul sir
    27                                      
    28 0000001A 01DF                        add edi, ebx ; ne pozitionam pe cel de-al doilea element din primul sir
    29                                      
    30 0000001C 39D1                        cmp ecx, edx ; verificam care dintre cele 2 siruri este mai scurt
    31 0000001E 7F02                        jg AlDoileaSirEMaiScurt
    32 00000020 7E02                        jng PrimulSirEMaiScurt
    33                                      
    34                                      AlDoileaSirEMaiScurt:
    35 00000022 89D1                            mov ecx, edx
    36                                      
    37                                      PrimulSirEMaiScurt:
    38                                      
    39 00000024 FD                          std ; stabilim parcurgerea in ordine inversa a sirurilor, in vederea gasirii sufixului comun
    40                                      
    41 00000025 BB00000000                  mov ebx, 0 ; facem din ebx un contor in care numaram caracterele din sufixul comun
    42                                      
    43                                      Repeta:
    44                                    
    45 0000002A A6                              cmpsb ; verificam daca caracterul actual este comun 
    46                                              
    47 0000002B 7402                            je Crestem ; daca da, incrementam contorul
    48 0000002D 7503                            jne Iesim ; daca nu, iesim din lup
    49                                              
    50                                          Crestem:
    51 0000002F 43                                  inc ebx
    52                                          
    53 00000030 E2F8                        loop Repeta
    54                                      
    55                                      Iesim:
    56                                      
    57                                      ; ebx va contine numarul de caractere din sufix dorit
    58                                      
    59                                      Returnam:    
    60                                    
    61 00000032 C20800                      ret 4*2 ; in acest caz 8 reprezinta 
    62                                  	;numarul de octeti ce trebuie eliberati de pe stiva 
    63                                  	;(parametrii pasati procedurii - adica cei 2 pusi pe stiva*4)
    64                                  	
    65                                  	
