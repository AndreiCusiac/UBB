     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fscanf, fprintf, fopen, fclose, scanf, printf   ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  
    10                                  import scanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  
    13                                  import fscanf msvcrt.dll
    14                                  import fprintf msvcrt.dll
    15                                  
    16                                  import fopen msvcrt.dll
    17                                  import fclose msvcrt.dll
    18                                  
    19                                      ; exit is a function that ends the calling process. It is defined in msvcrt.dll 
    20                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    21                                  
    22                                  ; our data is declared here (the variables needed by our program)
    23                                  segment data use32 class=data
    24                                      ; ...
    25                                      
    26 00000000 00000000                    nr dd 0
    27 00000004 00                          k db 0
    28                                      
    29 00000005 256400                      fdec db '%d', 0
    30                                      
    31 00000008 4E756D654465466973-         nume_fis db 'NumeDeFisier.txt', 0
    31 00000011 6965722E74787400   
    32                                      
    33 00000019 7700                        mod_acces_scriere db 'w', 0
    34                                      
    35 0000001B 00000000                    desc_nume_fis dd 0
    36                                      
    37 0000001F 44617469206E756D65-         mesaj_intampinare db 'Dati numere pana la valoarea 0:', 0
    37 00000028 72652070616E61206C-
    37 00000031 612076616C6F617265-
    37 0000003A 6120303A00         
    38                                      
    39 0000003F 6E72203D2000                mesaj_citire db 'nr = ', 0
    40                                      
    41 00000045 4E756D6572656C6520-         mesaj db 'Numerele citite de la tastatura sunt: ', 0
    41 0000004E 636974697465206465-
    41 00000057 206C61207461737461-
    41 00000060 747572612073756E74-
    41 00000069 3A2000             
    42 0000006C 4E7520732D61752069-         mesaj_vid db 'Nu s-au introdus valori nenule!', 0
    42 00000075 6E74726F6475732076-
    42 0000007E 616C6F7269206E656E-
    42 00000087 756C652100         
    43                                      
    44 0000008C 0A00                        linie_noua db 10, 0
    45                                      
    46 0000008E 2000                        spatiu_nou db ' ', 0
    47                                      
    48                                  ; our code starts here
    49                                  segment code use32 class=code
    50                                      start:
    51                                          
    52                                          ; Se da un nume de fisier (definit in segmentul de date). Sa se creeze un fisier cu numele dat, 
    53                                          ; apoi sa se citeasca de la tastatura numere si sa se scrie valorile citite in fisier pana cand se citeste de la tastatura valoarea 0.
    54                                          
    55                                          ; Cream un fisier pentru scriere
    56                                          
    57 00000000 68[19000000]                    push dword mod_acces_scriere
    58 00000005 68[08000000]                    push dword nume_fis
    59 0000000A FF15[00000000]                  call [fopen]
    60 00000010 83C408                          add esp, 4*2
    61                                          
    62 00000013 A3[1B000000]                    mov [desc_nume_fis], eax ; salvam descriptorul fisierului
    63                                          
    64 00000018 83F800                          cmp eax, 0 ; verificam daca a aparut o eroare la crearea fisierului
    65 0000001B 0F84E2000000                    je final ; daca da, incheiem rularea programului
    66                                          
    67                                          ; Scriem un mesaj de confirmare in fisier
    68                                          
    69 00000021 68[45000000]                    push dword mesaj
    70                                          ;push dword linie_noua
    71 00000026 FF35[1B000000]                  push dword [desc_nume_fis]
    72 0000002C FF15[00000000]                  call [fprintf]
    73 00000032 83C408                          add esp, 4*2
    74                                          
    75 00000035 68[8C000000]                    push dword linie_noua
    76 0000003A FF35[1B000000]                  push dword [desc_nume_fis]
    77 00000040 FF15[00000000]                  call [fprintf]
    78 00000046 83C404                          add esp, 4*1
    79                                          
    80                                          ; Afisam in consola un mesaj pentru utilizator
    81                                          
    82 00000049 68[1F000000]                    push dword mesaj_intampinare
    83                                          ;push dword linie_noua
    84 0000004E FF15[00000000]                  call [printf]
    85 00000054 83C404                          add esp, 4*1
    86                                          
    87 00000057 68[8C000000]                    push dword linie_noua
    88 0000005C FF15[00000000]                  call [printf]
    89 00000062 83C404                          add esp, 4*1
    90                                          
    91 00000065 B902000000                      mov ecx, 2 ; asiguram desfasurarea loop-ului de citire de cate ori este nevoie 
    92                                          
    93                                          RepetamCititulPanaLa0:
    94                                              
    95                                              ; "nr = "
    96                                              
    97 0000006A 68[3F000000]                        push dword mesaj_citire
    98 0000006F FF15[00000000]                      call [printf]
    99 00000075 83C404                              add esp, 4*1
   100                                              
   101 00000078 68[00000000]                        push dword nr
   102 0000007D 68[05000000]                        push dword fdec
   103 00000082 FF15[00000000]                      call [scanf]
   104 00000088 83C408                              add esp, 4*2
   105                                              
   106 0000008B 8A1D[00000000]                      mov bl, [nr]
   107 00000091 80FB00                              cmp bl, 0 ; verificam daca s-a citit valoarea 0
   108                                              
   109 00000094 743D                                je InAfaraLupului ; daca da, iesim din loop
   110 00000096 7500                                jne InLup ; daca nu, continuam loop-ul
   111                                              
   112                                              InLup:
   113                                                  
   114                                                  ; Adaugam numarul citit in fisier
   115                                              
   116 00000098 FF35[00000000]                          push dword [nr]
   117 0000009E 68[05000000]                            push dword fdec
   118 000000A3 FF35[1B000000]                          push dword [desc_nume_fis]
   119 000000A9 FF15[00000000]                          call [fprintf]
   120 000000AF 83C40C                                  add esp, 4*3
   121                                                  
   122 000000B2 FE05[04000000]                          inc byte[k] ; verificam in contor daca s-au citit numere nenule
   123                                                  
   124                                                  ; Adaugam un spatiu pentru lizibilitate
   125                                                  
   126 000000B8 68[8E000000]                            push dword spatiu_nou
   127 000000BD FF35[1B000000]                          push dword [desc_nume_fis]
   128 000000C3 FF15[00000000]                          call [fprintf]
   129 000000C9 83C408                                  add esp, 4*2
   130                                                  
   131 000000CC B902000000                              mov ecx, 2
   132                                              
   133 000000D1 E297                            loop RepetamCititulPanaLa0
   134                                          
   135                                          InAfaraLupului:
   136                                              
   137 000000D3 8A1D[04000000]                      mov bl, [k]
   138 000000D9 80FB00                              cmp bl, 0 ; verificam daca s-au citit numere nenule
   139                                              
   140 000000DC 7402                                je MesajDeAtentionare ; daca da, scriem in fisier un mesaj de atentionare
   141 000000DE 7514                                jne Incheiere ; daca nu, inchidem fisierul
   142                                              
   143                                              MesajDeAtentionare:
   144                                                  
   145 000000E0 68[6C000000]                            push dword mesaj_vid
   146 000000E5 FF35[1B000000]                          push dword [desc_nume_fis]
   147 000000EB FF15[00000000]                          call [fprintf]
   148 000000F1 83C408                                  add esp, 4*2
   149                                                  
   150                                                  
   151                                          Incheiere:
   152                                              
   153 000000F4 FF35[1B000000]                      push dword [desc_nume_fis]
   154 000000FA FF15[00000000]                      call [fclose]
   155 00000100 83C404                              add esp, 4
   156                                          
   157                                          final:
   158                                          
   159                                          ; exit(0)
   160 00000103 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   161 00000105 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
