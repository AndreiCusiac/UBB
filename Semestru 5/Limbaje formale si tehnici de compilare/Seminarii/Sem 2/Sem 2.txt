1. 
La = {1w | w € {0,1}*} U {0}
b) L = La U {-1w | w € {0, 1}*}
c) L = La U {1w | w € {0, 1}*, a € {0, 1}}+ U {0,b | b € {0,1}*}
d) L = {wv | w € {1, .. 9}, v € {0, .. 9}*} U {0}
e) L = {svw | s € {+, -}, v € {1, 9}, w € {0, 9}*} U {0}
f) L = Ld U {cw,v | w € {0, ..9}*, v € {0, .. 9}+, c € {1, ..9}} U {0,a | a € {0, ..9}+}

2.
1. 
a) A = 1 => aB = 3 => ab
A = 2 => B = 3 => b
L(G) = {ab, b}

b) vezi arbore în caiet 
L(G) = {o funcție este derivabilă, orice f. e derivabilă, o f. e continuă, orice f. e continuă}

2.
a) G = {N, E, S, P}
N = {A, B}
E = {a, b, c}
S = A
P: A -> aB
B -> b | c

b) G = {N, E, S, P}
N = {A, B, C}
E = {a, b, c}
S = A
P: A -> aB
B -> bC 
C -> c

3. cu privire la 2. 1. a)
BNF
L = {ab, b}
<A> ::= ab
<A> ::= b

EBNF
A = ["a"]"b"

cu privire la 2. 2. a)
BNF 
L = {ab, ac}
<A> ::= ab
<A> ::= ac

EBNF
A = "a"("b" | "c")

4. a) L = {ab, aabb, aaabbb, ...} = {a^xb^x | x € N*}
b) G = (N, E, S, P)
N = {A}
E = {a, b}
S = A
P: A -> ab
A -> aAb

5.
1. G = (N, E, S, P)
N = {A}
E = {x, y}
S = A
P: (1) A -> eps 
(2) A -> xAY
Vrem să dem. că L = L(G)
Vom dem. mai întâi că L inclus în L(G)
n = 0, x^ny^n = eps; A = 1 => eps = x^0y^0 => x^0y^0 € L(G)																	}
Fie n>0 oarecare, x^ny^n; A = 2 => xAy = 2 => xxAyy = 2 => ... = 2 => x^nAy^n = 1 => x^ny^n => x^ny^n € L(G), oricare n>0	} ==> L inclus în L(G) (*)

Vom dem. că L(G) inclus în L în mod inductiv.
Definim predicatul P(k) = "După exact k pași de derivare se obține x^kAy^k sau x^(k-1)y^(k-1)"
k=1: A = 1 => eps = x^(1-1)y^(1-1) }
	 A = 2 => xAy = x^1Ay^1		   } ==> P(1) este adev.								}
																						}
Pp. P(k-1) adev.																		}
	 A = k-1 derivări => x^(k-1)Ay^(k-1) --- = 1 => x^(k-1)y^(k-1) }					}
	 A = k-1 derivări => x^(k-2)y^(k-2) \--- = 2 => x^kAy^k		   } ==> P(k) adev.		} ==> L(G) inclus în L (**)
	 
(*), (**) ==> L = L(G)

2. G = (N, E, S, P)
N = {A}
E = {a, b, c}
S = A
P: (1) A -> bc
(2) A -> aaA

L = {a^(2n)bc, n € N}
n = 0, bc; A = 1 => bc => a^(2*0)bc € L(G)							}
n > 0, a^(2n)bc; A = 2 => aaA = 2 => a^(2n)A = a => a^(2n)bc € L(G) } ==> L inclus în L(G)

Def. pred. P(k) = "După k derivări vom obține a^(2k)A sau a^(2k-2)bc"
P(1):
A = 1 => bc = a^(2*1-2)bc
A = 2 => a^2A = a^(2*1)A => ...

	 
